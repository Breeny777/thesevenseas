# TheSevenSeas ARR stack :):):)
# vars from .env file which should reside in same folder as this file
# Comment out sections as required to stop containers being run

services:
  # ---- Media Server ----
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: PlexHost-Plex  
    network_mode: host
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - VERSION=docker
      # - PLEX_CLAIM= #optional
      - NVIDIA_VISIBLE_DEVICES=all
    runtime: nvidia
    volumes:
      # - /path/to/plex/library:/config
      # - /path/to/tvseries:/tv
      # - /path/to/movies:/movies
      - '${ROOT}/config/plex:/config'
      - '${HDDSTORAGE1}:/tv1'
      - '${HDDSTORAGE2}:/tv2'
      - '${HDDSTORAGE3}:/tv3'
      - '${HDDSTORAGE1}:/movies1'
      - '${HDDSTORAGE2}:/movies2'
      - '${HDDSTORAGE3}:/movies3'
      - '${HDDSTORAGE1}:/docos'
      - '${HDDSTORAGE2}:/kidsmovies'
      - '${HDDSTORAGE2}:/docos'
      - '${HDDSTORAGE2}:/music'
    restart: unless-stopped
  
  # ---- TV Shows ----
  sonarr:
    container_name: PlexHost-Sonarr
    image: 'linuxserver/sonarr:latest'
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/config/sonarr:/config'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/media3'
      - '${HDDSTORAGE4}:/torrents'
    ports:
      - "32402:8989"

  # ---- Movies ----    
  radarr:
    container_name: PlexHost-Radarr
    image: 'linuxserver/radarr:latest'
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/config/radarr:/config'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/media3'
      - '${HDDSTORAGE4}:/torrents'  
    ports:
      - "32403:7878"

  # ---- Books ----    
  readarr:
    container_name: PlexHost-Readarr
    image:  ghcr.io/pennydreadful/bookshelf:hardcover-v0.4.20.91
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/config/readdarr:/config'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE4}:/torrents'
    ports:
      - "32404:8787"

  # ---- Music ----    
  lidarr:
    container_name: PlexHost-Lidarr
    
    # image: linuxserver/lidarr:develop
    image: blampe/lidarr:latest
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/config/lidarr:/config'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE4}:/torrents'  
    ports:
      - "32405:8686"

  # ---- Indexer (Torrents) ----     
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: PlexHost-Prowlarr
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '${ROOT}/config/prowlarr:/config'
    restart: unless-stopped
    ports:
      - "32406:9696"
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: PlexHost-Flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - 'TZ=${TZ}'
    ports:
      - "${PORT:-32409}:8191"
    restart: unless-stopped

  # ---- Download Client (Torrents) ----
  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: PlexHost-Qbittorrent
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - WEBUI_PORT=8080 # Port for the qBittorrent web UI
    volumes:
      - '${ROOT}/config/qbit:/config'
      - '${HDDSTORAGE4}:/torrents'
    ports:
      - 32419:8080 # Web UI access
      - 6881:6881 # Peer-to-peer connections (TCP)
      - 6881:6881/udp # Peer-to-peer connections (UDP)
    restart: unless-stopped

  # ---- file compression utility ----   
  tdarr:
    container_name: PlexHost-Tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    privileged: true
    ports:
      - 32411:8265 # webUI port
      - 8266:8266 # server port
    environment:
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - UMASK_SET=002
      - serverIP=192.168.4.5
      - serverPort=8266
      - webUIPort=8265
      - internalNode=false
      - inContainer=true
      - ffmpegVersion=7
      - nodeName=plexhost
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - '${ROOT}/config/tdarr/configs:/app/configs'
      - '${ROOT}/config/tdarr/server:/app/server'
      - '${ROOT}/config/tdarr/logs:/app/logs'
      - '${ROOT}/config/tdarr/cache:/temp'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/media3'

    devices:
      - /dev/dri:/dev/dri
  tdarr-node:
    container_name: PlexHost-Tdarr_node
    image: ghcr.io/haveagitgat/tdarr_node:latest
    restart: unless-stopped
    network_mode: service:tdarr
    environment:
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - UMASK_SET=002
      - nodeName=Node1
      - serverIP=192.168.4.5
      - serverPort=8266
      - inContainer=true
      - ffmpegVersion=7
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - '${ROOT}/config/tdarr/configs:/app/configs'
      - '${ROOT}/config/tdarr/logs:/app/logs'
      - '${ROOT}/config/tdarr/cache:/temp'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/media3'
    devices:
      - /dev/dri:/dev/dri
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu,video]
# ---- Calibre for ebook management ----
  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    restart: unless-stopped
    environment:
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - PASSWORD= 
    volumes:
      - '${ROOT}/config/calibre:/config'
      - '${HDDSTORAGE2}:/media2'
    ports:
      - 32413:8080
      - 8181:8181
      - 8081:8081
  # ---- Calibre web for book management ----
  calibre-web-automated:
    image: crocodilestick/calibre-web-automated:latest
    container_name: PlexHost-Calibre-Web-Automated
    environment:
      # Only change these if you know what you're doing
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
    volumes:
      # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.
      - '${ROOT}/config/cwa:/config'
      # This is an ingest dir, NOT a library one. Anything added here will be automatically added to your library according to the settings you have configured in CWA Settings page. All files placed here are REMOVED AFTER PROCESSING
      - '${HDDSTORAGE2}/Books:/cwa-book-ingest'
      # If you don't have an existing library, CWA will automatically create one at the bind provided here
      - '${HDDSTORAGE2}/Calibre-Library:/calibre-library'
    ports:
      # Change the first number to change the port you want to access the Web UI, not the second
      - 8083:8083 
    restart: unless-stopped
  # ---- Cloudflare Tunnels ----
  tunnel1-books:
    image: cloudflare/cloudflared:latest
    container_name: CFT-books
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token eyJhIjoiMTc0NzM1NDIyNjNmZmQ0OTlmYzcwNmRhNDViNjcyY2UiLCJ0IjoiZWRmYmJkNjYtMWI5Mi00MjU4LTgyMjgtMGQyNmQxN2M2NzdhIiwicyI6IlpqQTBObVkzTW1JdFlXWTRZaTAwTWpSakxXRTFPVFl0WVRGaE1qSmpaV0ppT0dSayJ9
  tunnel2-overseerr:
    image: cloudflare/cloudflared:latest
    container_name: CFT-overseerr
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token eyJhIjoiMTc0NzM1NDIyNjNmZmQ0OTlmYzcwNmRhNDViNjcyY2UiLCJ0IjoiM2QwYmZjODYtNGVmNC00OTdlLThjNDMtZTFiMThjYTZmNTliIiwicyI6Ik56YzJPV05rTnpRdFpETTRPQzAwWlRjeExUZzNORGN0T0dVeU16Z3pabVUzTmpnNCJ9
  tunnel3-dashboard:
    image: cloudflare/cloudflared:latest
    container_name: CFT-dashboard
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token eyJhIjoiMTc0NzM1NDIyNjNmZmQ0OTlmYzcwNmRhNDViNjcyY2UiLCJ0IjoiNjBhNjQzMDUtZjE5My00YzgzLWExMDEtYmVhOWRlYzAxYjU4IiwicyI6Ik5EQTJNVEUxT0dRdE9Ua3lZeTAwWlRaaExXSm1OakV0TWpFNE1XRmpNek00WlRKaCJ9

# Optional containers
  # ---- Plex user management ----
  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: PlexHost-Tautulli
    restart: unless-stopped
    volumes:
      - '${ROOT}/config/tautulli:/config'
    environment:
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
    ports:
      - 32412:8181
  
  huntarr:
    image: huntarr/huntarr:latest
    container_name: PlexHost-Huntarr
    restart: always
    ports:
      - "32416:9705"
    volumes:
      - '${ROOT}/config/huntarr/cache:/config'
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'

  # ---- Media renamer and metadate finder -----   
  tinymediamanager:
    image: tinymediamanager/tinymediamanager:latest
    container_name: PlexHost-TinyMediaManager
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - ALLOW_DIRECT_VNC=true
      - LC_ALL=en_US.UTF-8 # force UTF8
      - LANG=en_US.UTF-8   # force UTF8
      - PASSWORD=
    volumes:
      - '${ROOT}/config/tinymediamanager:/data'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/media3'
    ports:
      - 5900:5900 # VNC port
      - 32417:4000 # Webinterface
    restart: unless-stopped

  # ---- integrated multi media search tool ----
  overseerr:
    image: 'sctx/overseerr:latest'
    container_name: PlexHost-Overseerr
    environment:
      - LOG_LEVEL=debug
      - 'TZ=${TZ}'
    ports:
      - '32408:5055'
    volumes:
      - '${ROOT}/config/overseerr/config:/app/config'
    restart: unless-stopped

# ---- Dashboard services ----
  homarr:
      container_name: PlexHost-Homarr
      image: ghcr.io/homarr-labs/homarr:latest
      restart: unless-stopped
      # network_mode: host
      volumes:
        # - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
        - '${ROOT}/config/homarr:/appdata'
      environment:
        # - 'PUID=${PUID}'
        # - 'PGID=${PGID}'
        - 'TZ=${TZ}'
        - SECRET_ENCRYPTION_KEY=7d0fc795f5ddf8ab10d51c20009ff8110b1a5923f644f43f3eb01e4fe672f320
        - DOCKER_HOSTNAMES=192.168.4.5,192.168.4.16
        - DOCKER_PORTS=2375,2375
      ports:
        - '32418:7575'
  dash:
    image: mauricenino/dashdot:nvidia
    container_name: PlexHost-Dashdot
    restart: unless-stopped
    privileged: true
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
                - gpu
    ports:
      - '3001:3001'
    volumes:
      - /:/mnt/host:ro
    environment:
      DASHDOT_ENABLE_CPU_TEMPS: 'true'
      DASHDOT_ALWAYS_SHOW_PERCENTAGES: 'true'  
      DASHDOT_WIDGET_LIST: 'os,cpu,storage,ram,network,gpu'
      NVIDIA_DISABLE_REQUIRE: 'true'
  # Container access proxy - DO NOT REMOVE
  docker-socket-proxy:
      image: tecnativa/docker-socket-proxy
      container_name: PlexHost-docker-socket-proxy
      ports:
        - "2375:2375"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      environment:
        - CONTAINERS=1
        - POST=1
        - DELETE=1
        - SERVICES=1
        - NETWORKS=1
        - LOG_LEVEL=info
      restart: unless-stopped

volumes:
    data: