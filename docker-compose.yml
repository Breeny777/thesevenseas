services:
  sonarr:
    container_name: sonarr
    image: 'linuxserver/sonarr:latest'
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/config/sonarr:/config'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/torrents'
    ports:
      - "32402:8989"
  radarr:
    container_name: radarr
    image: 'linuxserver/radarr:latest'
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/config/radarr:/config'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/torrents'  
    ports:
      - "32403:7878"  
  readarr:
    container_name: readarr
    image:  linuxserver/readarr:develop
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/config/readdarr:/config'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/torrents'
    ports:
      - "32404:8787"
  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr:develop
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/config/lidarr:/config'
      - '${HDDSTORAGE2}:/media2'
      - '${HDDSTORAGE3}:/torrents'  
    ports:
      - "32405:8686" 
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '${ROOT}/config/prowlarr:/config'
    restart: unless-stopped
    ports:
      - '32406:9696'

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - 'TZ=${TZ}'
    ports:
      - "${PORT:-32409}:8191"
    restart: unless-stopped
  deluge:
    container_name: deluge
    image: 'linuxserver/deluge:latest'
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '${ROOT}/config/deluge:/config'
      - '${HDDSTORAGE3}:/torrents'
    ports:
      - '32410:8112'
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    privileged: true
    ports:
      - 32411:8265 # webUI port
      - 8266:8266 # server port
    environment:
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - UMASK_SET=002
      - serverIP=192.168.4.5
      - serverPort=8266
      - webUIPort=8265
      - internalNode=false
      - inContainer=true
      - ffmpegVersion=7
      - nodeName=plexhost
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - '${ROOT}/config/tdarr/configs:/app/configs'
      - '${ROOT}/config/tdarr/server:/app/server'
      - '${ROOT}/config/tdarr/logs:/app/logs'
      - '${ROOT}/config/tdarr/cache:/temp'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'

    devices:
      - /dev/dri:/dev/dri
        # deploy:
        # resources:
        # reservations:
        # devices:
        # - driver: nvidia
        # count: all
        # capabilities: [gpu]
  tdarr-node:
    container_name: tdarr_node
    image: ghcr.io/haveagitgat/tdarr_node:latest
    restart: unless-stopped
    network_mode: service:tdarr
    environment:
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - UMASK_SET=002
      - nodeName=Node1
      - serverIP=192.168.4.5
      - serverPort=8266
      - inContainer=true
      - ffmpegVersion=7
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all

    volumes:
      - '${ROOT}/config/tdarr/configs:/app/configs'
      - '${ROOT}/config/tdarr/logs:/app/logs'
      - '${ROOT}/config/tdarr/cache:/temp'
      - '${HDDSTORAGE1}:/media1'
      - '${HDDSTORAGE2}:/media2'

    devices:
      - /dev/dri:/dev/dri
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu,video]           
 
  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    restart: unless-stopped
    environment:
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - PASSWORD= 
    volumes:
      - '${ROOT}/config/calibre:/config'
      - '${HDDSTORAGE2}:/media2'
    ports:
      - 32413:8080
      - 8181:8181
      - 8081:8081

# Optional containers
  # tautulli:
  #   image: ghcr.io/tautulli/tautulli
  #   container_name: tautulli
  #   restart: unless-stopped
  #   volumes:
  #     - '${ROOT}/config/tautulli:/config'
  #   environment:
  #     - 'TZ=${TZ}'
  #     - 'PUID=${PUID}'
  #     - 'PGID=${PGID}'
  #   ports:
  #     - 32412:8181

  # bazarr:
  #   container_name: bazarr
  #   image: 'linuxserver/bazarr:latest'
  #   restart: unless-stopped
  #   environment:
  #     - 'PUID=${PUID}'
  #     - 'PGID=${PGID}'
  #     - 'TZ=${TZ}'
  #     - UMASK_SET=022
  #   volumes:
  #     - '${ROOT}/config/bazarr:/config'
  #     - '${HDDSTORAGE1}:/media1'
  #     - '${HDDSTORAGE2}:/media2'
  #     - '${HDDSTORAGE3}:/torrents'
  #   ports:
  #     - '32407:6767'
  huntarr:
    image: huntarr/huntarr:latest
    container_name: huntarr
    restart: always
    ports:
      - "32416:9705"
    volumes:
      - '${ROOT}/config/huntarr/cache:/config'
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
  # tinymediamanager:
  #   image: tinymediamanager/tinymediamanager:latest
  #   container_name: tinymediamanager
  #   environment:
  #     - 'PUID=${PUID}'
  #     - 'PGID=${PGID}'
  #     - 'TZ=${TZ}'
  #     - ALLOW_DIRECT_VNC=true
  #     - LC_ALL=en_US.UTF-8 # force UTF8
  #     - LANG=en_US.UTF-8   # force UTF8
  #     - PASSWORD=
  #   volumes:
  #     - '${ROOT}/config/tinymediamanager:/data'
  #     - '${HDDSTORAGE1}:/media1'
  #     - '${HDDSTORAGE2}:/media2'
  #   ports:
  #     - 5900:5900 # VNC port
  #     - 32417:4000 # Webinterface
  #   restart: unless-stopped    
  # overseerr:
  #   image: 'sctx/overseerr:latest'
  #   container_name: overseerr
  #   environment:
  #     - LOG_LEVEL=debug
  #     - 'TZ=${TZ}'
  #   ports:
  #     - '32408:5055'
  #   volumes:
  #     - '${ROOT}/config/overseerr/config:/app/config'
  #   restart: unless-stopped 
  # portainer:
  #    image: portainer/portainer-ce:latest
  #    container_name: portainer-ce
  #    ports:
  #      - 32415:9443
  #    volumes:
  #        - data:/data
  #        - /var/run/docker.sock:/var/run/docker.sock
  #    restart: unless-stopped
  7dtdserver:
    image: vinanrra/7dtd-server
    container_name: 7days-gameserver
    environment:
      - START_MODE=1
      - VERSION=stable
      - PUID=1000 # your uid of your user
      - PGID=1000 # your gid of your user's group
      - 'TZ=${TZ}'
      - TEST_ALERT=YES
    #- ALLOC_FIXES=YES #Optional - Install ALLOC FIXES
    volumes:
      - '${ROOT}/config/7dtd:/home/sdtdserver/serverfiles/' #Optional, serverfiles
      - '${ROOT}/config/7dtd:/home/sdtdserver/.local/share/7DaysToDie/' #Optional, maps files
      - '${ROOT}/config/7dtd:/home/sdtdserver/log/' #Optional, logs
      - '${ROOT}/config/7dtd:/home/sdtdserver/lgsm/backup/' #Optional, backups
      - '${ROOT}/config/7dtd:/home/sdtdserver/lgsm/config-lgsm/sdtdserver' # Optional, alerts
    ports:
      - 26900:26900/tcp
      - 26900:26900/udp
      - 26901:26901/udp
      - 26902:26902/udp
      - 8087:8080/tcp
      - 8088:8081/tcp
      - 8089:8082/tcp
    restart: unless-stopped #NEVER USE WITH START_MODE=4 or START_MODE=0
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
  mumble-server:
    image: mumblevoip/mumble-server:<tag>
    container_name: mumble-server
    hostname: mumble-server
    restart: on-failure
    ports:
      - 64738:64738
      - 64738:64738/udp
#   expose:
#     - 6502         
volumes:
    data:

 